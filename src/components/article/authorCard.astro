---
import { Picture } from 'astro:assets';
import { getEntry } from 'astro:content';

if (!Astro.props.slug) console.error("Warning: no author slug provided!");

console.log("Astro.props.slug: ", Astro.props.slug);
const author = await getEntry('team', Astro.props.slug)
console.log("Author: ", author);
var { image, name, type, url, worksFor, description, sameAs, name_slug } = author.data;

// console.log("Imported image: ", image);

// we don't need this anymore because we figured out how to import the image in the frontmatter
// const image = image ? (async () => {
//   const images = await import.meta.glob('/src/content/*/*/*.{jpeg,jpg,png,gif,webp,avif,svg}');
//   const imgKey = `/src/content/team/${name_slug}/${image}`.replace(/\/\//g, '/');
//   return images[imgKey]?.();
// })() : '';

// const profileImage = '/team/'+name_slug+'/'+image
const size = Astro.props.size || 'sm';
const pageURL = Astro.url.href.replace('[::1]', 'localhost').replace(/\/$/, '') //.replace(/:(\d+)/, ':3000')
const siteURL = new URL(pageURL).origin.replace(/\/$/, '');
//const imageURL = image ? siteURL + (await image)?.default?.src : '';

const imageURL = image ? siteURL + image.src : '';
const uniqueID = 'id-' + Math.random().toString(36).slice(2, 11);
const AuthorBioIDURL = `${pageURL}#${uniqueID}`;
const authorURL = (url & author.data.url.length) ? url : `${siteURL}/authors/${name_slug}` // absolute url for this author tag

var schema = {
  "@context": "https://schema.org",
  "@type": type,
  '@id': `${authorURL}`,
  name: name,
  url: authorURL,
  image: imageURL,
  description: description,
  sameAs: sameAs, // an array of social media urls
  mainEntityOfPage: {
    "@type": "WebPageElement",
    id: AuthorBioIDURL,
  }
};
if (type === 'Person') {
  schema.jobTitle = "Writer";
  schema.worksFor = { "@type": worksFor['@type'], name: worksFor.name, }
  schema.isPartOf = { "@type": "WebPage", "@id": pageURL}
}
---


{ size==='sm' && (
<div id={uniqueID} class="author w-48 h-48 shadow-lg rounded-lg overflow-hidden mx-auto border-2 border-gray-200 p-1">
  <a href={authorURL} >
    <div class="relative h-full">
      <Picture src={image.src} class="w-full h-full object-cover rounded-md" alt={image.alt} />
      <div class="absolute bottom-0 left-0 right-0 bg-black bg-opacity-35 rounded-b-lg">
        <div class="text-white px-1 py-1">
          <h3 class="text-sm font-semibold">{name}</h3>
          <h3 class="text-xs">{author.data.jobTitle}</h3>
        </div>
      </div>
    </div>
  </a>
</div>
)}


{ size==='md' && (
  <div id={uniqueID} class="author max-w-64 max-h-96 shadow-lg rounded-lg overflow-hidden mx-auto border-2 border-gray-200 p-2 text-center">
    <div class="relative pb-32 overflow-hidden">
      <div class="absolute inset-0">
      <div class="w-32 h-32 overflow-hidden rounded-full border-4 border-gray-400 mx-auto">
        <Picture src={image.src} class="w-full h-full object-cover" alt={image.alt} />
      </div>
      </div>
    </div>
    <div class="px-0 py-2">
      <h3 class="text-lg font-semibold text-gray-800">{name}</h3>
      <p class="text-gray-600 text-sm">{author.data.description_125}</p>
    </div>
  </div>
)}



{ size==='lg' && (
  <div id={uniqueID} class="author max-w-64 max-h-96 shadow-lg rounded-lg overflow-hidden mx-auto border-2 border-gray-200 p-2 text-center">
    <div class="relative pb-32 overflow-hidden">
      <div class="absolute inset-0">
      <div class="w-32 h-32 overflow-hidden rounded-full border-4 border-gray-400 mx-auto">
        <Picture src={image.src} class="w-full h-full object-cover" alt={image.alt} />
      </div>
      </div>
    </div>
    <div class="px-0 py-2">
      <h3 class="text-lg font-semibold text-gray-800">{name}</h3>
      <p class="text-gray-600 text-sm">{author.data.description_125}</p>
    </div>
  </div>
)}



{ size==='bio' && (
  <div id={uniqueID} class="author-bio w-full my-20 border border-y-4 border-x-0 border-gray-200 p-3">
    <div class="flex flex-wrap sm:flex-nowrap">
      <div class="flex-1 order-2 sm:order-1 mt-4 sm:mt-0 sm:mr-4 text-center sm:text-start">
        <div class="author-bio-title text-lg font-semibold italic text-gray-500">About {name}</div>
        <br>
        <div class="author-bio text-md font-extralight">{description}</div>
      </div>
      <div class="w-full sm:w-auto sm:flex-shrink-0 order-1 sm:order-2 flex justify-center items-center">
        <div class="w-48 h-48 overflow-hidden rounded-full relative opacity-75 shadow-md border border-gray-400 border-2">
          <a href={authorURL}>
          <Picture src={image.src} alt={image.alt}
            class="absolute inset-0 w-full h-full object-cover rounded-full"
            formats={['avif', 'webp']}
            decoding="async"
            loading="lazy"
            height={185} quality="med" /></a>
        </div>
      </div>
    </div>
  </div>
)}

{ size==='full' && (
  <div id={uniqueID} class="author max-w-64 max-h-96 shadow-lg rounded-lg overflow-hidden mx-auto border-2 border-gray-200 p-2 text-center">
    <div class="relative pb-32 overflow-hidden">
      <div class="absolute inset-0">
      <div class="w-32 h-32 overflow-hidden rounded-full border-4 border-gray-400 mx-auto">
        <Picture src={image.src} class="w-full h-full object-cover" alt={image.alt} />
      </div>
      </div>
    </div>
    <div class="px-0 py-2">
      <h3 class="text-lg font-semibold text-gray-800">{name}</h3>
      <p class="text-gray-600 text-sm">{author.data.description_125}</p>
    </div>
  </div>
)}

<script type="application/ld+json" set:html={JSON.stringify(schema)} />
