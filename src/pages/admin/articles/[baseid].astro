---
// src/pages/admin/articles/[slug].astro
export const prerender = false;  // Forces SSR so we can process form submission

import Layout from '@layouts/AdminLayout.astro';
import site from '@data/site.json'; // site info
import { getPostFromID_DB, translationIDs_DB, getTeam, getTopics, getCategories,
  mainLanguages as langs } from "@utils/utils";
import PostEditor from '@components/admin/PostEditor.svelte';

// console.log('sessionid', sessionid, Astro.locals.session);
const user = Astro.locals?.user;
if (!['admin', 'superadmin', 'editor', 'author'].includes(user?.role)) return Astro.redirect('/admin');

const baseid = Astro.params.baseid;
const post = (await getPostFromID_DB(baseid+'/en.md'));
// console.log('found post from baseid:', baseid, post);
if (!post) return Astro.redirect('/admin/articles');

// props include: post, site, translations (all matching posts, author_list, topics_list, keywords_list
// const postid = post.id;
const translations = await translationIDs_DB(post.id, true); // already returns a list of ids
const authorList = (await getTeam()).map(({id}) => id);
const topicList =  (await getTopics()).map(({id}) => id);
const categoryList = (await getCategories()).map(({id}) => id);

// add id field to language and then sort by id with en first
const languages = site.languages.map(ln => ({ ...langs[ln], id:ln }))
  .sort((a,b) => a.id === 'en' ? -1 : b.id === 'en' ? 1 : a.id.localeCompare(b.id));
const sessionid = Astro.locals.session.id;
const language = post.data.language || 'en'

const editorObjects = { baseid, language, site, translations, authorList, topicList, categoryList, languages, sessionid };
---

<Layout menu="compact">

<div class="w-full mx-5 -ml-2 mr-10 no-prose">
    <PostEditor {...editorObjects} client:load />
</div>

</Layout>



